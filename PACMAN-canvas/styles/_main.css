html, body {
	margin:  0;
	padding: 0;
	width:  100%;
	height: 100vh;
	overflow: hidden;
}
html {
	font-size: 28px;
}
body {
	color: #FFF;
	background: #1B1B1C;
	font: 1rem/1 Verdana, sans-serif;
	display: grid;
	place-content: center;
	color-scheme: dark;
}
div, ul, menu, li, th, td, form, input, output {
	margin:  0;
	padding: 0;
	list-style-type: none;
}
svg {
	fill: #FFF;
	pointer-events: none;
}

header > * {
	color: #FF0;
	position: absolute;
	z-index: 100;
}
h1 {
	text-transform: lowercase;
	font: 1.15rem/.9 PacFont;
	translate: 23.3rem 11.2rem;
	display: flex;
	flex-direction: column;
	:nth-child(2) {text-indent: 1.5em}
}
#level {
	font: small-caps .8rem/1 Atari;
	scale: 0.82 1;
	translate: .1em 12.6rem;
}

#board {
	background: #000;
	position: relative;
	transform-origin: center;
	opacity: 0;
	transition:  opacity 0ms 100ms;
	will-change: opacity transform;
}
#boardCanvases {
	margin-top: 0.5rem;
	pointer-events: none;
	canvas.sub {position: absolute}
	canvas#cvs_bg  {z-index: -1}
	canvas#cvs_hud {z-index: +1}
}
body:is([data-state=Attract],[data-state=CoffBrk]) {
	:is(header,canvas.sub) {visibility: hidden}
}

#titleScr {
	--height: 3.2rem;
	background: #000B;
	border: red .1em;
	border-style: solid none;
	width: 100%;
	position: absolute;
	z-index: 100;
	top: 6.9rem;
}
body[data-state] {
	&:not([data-state=Title]) #titleScr {
		display: none;
	}
}

#startBtn {
	text-align: center;
	white-space: nowrap;
	font: .8rem/1 Atari, sans-serif;
	padding: .4rem 1.5rem .2rem;
	position: absolute;
	top: 21.85rem;
	left: 50%;
	translate: -50% 0;
}
#debug {
	white-space: pre;
	position: fixed;
	top:  .5em;
	left: .5em;
}

.panel {
	top: var(--height);
	right: 0;
	table {border-collapse: collapse}
	caption,
	&[data-caption]::before {
		text-align: center;
		color: #FF3;
		font: 700 .9rem/1 sans-serif;
		margin: .2em 0 .2em .4rem;
		padding: 0;
	}
	&[data-caption]::before {
		content: attr(data-caption);
		display: block;
	}
	> li,th,td {
		font: .8rem/1 sans-serif;
		padding: .1rem 0;
	}
	th, td {
		text-align: center;
		vertical-align: middle;
		font-weight: normal;
		padding: .2em;
	}
}

#cfg {
	height: var(--height);
	display: flex;
	gap: .4em;
	justify-content: center;
	align-items: center;
	.checkboxes, .buttons {
		font-size: .76rem;
		height: 100%;
		display: flex;
		gap: .2em;
		flex-direction: column;
		justify-content: center;
		label,button {display: block}
		[data-for=keys] {cursor: help}
	}
	> label:first-of-type  {
		color: inherit;
		display: flex;
		gap: .2em;
		align-items: center;
		font-variant: small-caps;
	}
	#cfgBtn {
		line-height: 0;
		padding: 0;
		width:  1.1rem;
		height: 1.1rem;
	}
}

#cfgPanel {
	> li {
		padding: .07em 0 !important;
		position: relative;
		display: flex;
		align-items: center;
	}
	> li.noLeft::before,
	> li:not(.noLeft) > :first-child {
		content: '';
		text-align: center;
		width: 1.5rem;
		+ * {flex: 1}
	}
	> li.buttons {
		display: block;
		button {
			margin:  .2em 0 0;
			padding: .2em 0;
			width: 100%;
			display: block;
		}
		#defBtn {border-width: 4px}
	}
	output + label {
		display: flex;
		align-items: center;
		justify-content: space-between;
	}
	[for=unrChk] {
		scale: .95 1;
		transform-origin: 0 0;
	}
	[type=range] {
		width:  4rem;
		height: 4px;
		scale: .9;
	}
}

#LevelMenu {
	--scale: 1.2;
	--t: calc(1rem * var(--scale));
	--width: calc(var(--t)*8);
	text-transform: uppercase;
	font: 0.9rem/1 sans-serif;
	margin-left: 0;
	output, mn-item {
		display: flex;
		gap: .2em;
		align-items: center;
	}
	output {
		padding-top:    .4em;
		padding-bottom: .3em;
	}
	mn-item {
		padding-top: .3em
	}
	output::before,
	mn-item::before {
		--x: calc(-1*var(--t) * var(--val, 0));
		--size: var(--width) var(--t);
		content: '';
		background: no-repeat var(--x) 0/var(--size) var(--url);
		margin-top: -.3em;
		width:  var(--t);
		height: var(--t);
	}
}
#ExtendMenu {
	text-align: right;
	font-size: .9em;
	scale: .9;
}

#keysPanel {
	kbd-arrows {display: inline-flex}
	kbd {
		text-align: center;
		font: 100%/1 Consolas, monospace;
		position: relative;
		display: inline-block;
		&.↑,
		&.↓ {width: 1em;height: 1em}
		&.↑ {margin-left: -0.2em;top: -0.25em}
		&.↓ {margin-left: -1.0em;top: +0.25em}
		&.→ {margin-left: -0.2em;}
	}
}

#volume {
	--size: 1.4rem;
	--thumb-size: 0.4rem;
	width:  calc(var(--size) + var(--thumb-size) * 1.1);
	height: var(--size);
	position: absolute;
	top:   .25em;
	right: .15em;
	canvas {
		position: absolute;
		top:   0;
		right: 0;
		cursor: pointer;
	}
	input {
		--thumb-size: inherit;
		--size: 1.2rem;
		position: absolute;
		z-index: -1;
		left: calc(var(--thumb-size)/2);
		top:  var(--size);
		width:var(--size);
		height: 3px;
		rotate: -90deg;
		transform-origin: 0 50%;
		opacity: 0;
		will-change: opacity;
	}
	input:focus,
	&:hover input {z-index: 1;opacity: 1}
	&:hover input {transition: all .2s .4s}
}