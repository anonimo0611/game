#titleScr {
	--height: 3.2rem;
	--label-fg: #6FD;
	--label-fg-hover: #FBE;
	background: #000B;
	border: red .1em;
	border-style: solid none;
	width: 100%;
	position: absolute;
	top: 6.9rem;
}

#titleScr .panel {
	top: var(--height);
	right: 0;
	table {border-collapse: collapse}
	caption,
	&[data-caption]::before {
		text-align: center;
		color: #FF3;
		font: 700 100%/1 sans-serif;
		margin: .2em 0 .2em .4rem;
		padding: 0;
	}
	&[data-caption]::before {
		content: attr(data-caption);
		display: block;
	}
	> li,th,td {
		font: 1em/1 sans-serif;
		padding: .1rem 0;
		vertical-align: middle;
	}
	th {
		text-align: center;
		color: var(--label-fg);
		font-weight: normal;
		padding-left: .4em;
	}
	td {
		text-align: center;
		padding: 0 .4em;
	}
	tr:hover th {
		color: var(--label-fg-hover);
		+ td {background-color: #3699}
	}
}

#cfg {
	height: var(--height);
	display: flex;
	justify-content: center;
	align-items: center;
	> * {
		margin: 0 .2em;
	}
	.checkboxes {
		font-size: 70%;
		label {
			margin: .3em 0 .3em .3em;
			display: block;
		}
	}
	.buttons {
		font-size: 70%;
		height: 100%;
		display: flex;
		gap: .3em;
		flex-direction: column;
		justify-content: center;
		button {
			padding: .2em .2em;
			width: 100%;
		}
	}
	label:has(+#LevelMenu)  {
		color: #FFF;
		font-variant: small-caps;
		margin:  0;
		padding: 0 .3em;
	}
	button[data-for=keys] {
		cursor: help;
	}
	#cfgBtn {
		line-height: 0;
		padding: 0;
		width:  1.1rem;
		height: 1.1rem;
	}
}

#cfgPanel {
	line-height: 1;
	padding: .2em;
	> li {
		padding: .05em 0;
		position: relative;
		display: flex;
	}
	> li:not(.one) > :first-child,
	> li.slidemenu-wrapper::before {
		content: '';
		text-align: center;
		width: 1.5rem;
		display: inline-block;
	}
	> li > :first-child + * {flex: 1}
	> li.buttons {
		display: block;
		button {
			margin:  .2em 0 0;
			padding: .2em 0;
			width: 100%;
			display: block;
		}
		#defBtn {border-width: 4px}
	}
	[for=unrChk] {
		display: inline-block;
		scale: .95 1;
		transform-origin: 0 0;
	}
	[type=range] {
		width: 4rem;
		position: absolute;
		right: 0;
		top: 50%;
		translate: 0 -50%;
		scale: .8;
	}
	#ExtendScoreMenu {
		font-size: 80%;
		position: absolute;
		right: 0.5em;
		small {
			font: bold 65% sans-serif;
			margin-left: .1em;
		}
	}
}

#keysPanel {
	padding: 0 .2em .2em;
	.arrows {display: inline-flex}
	kbd {
		text-align: center;
		font: 100%/1 Consolas, monospace;
		position: relative;
		display: inline-block;
		&.↑,
		&.↓ {width: 1em;height: 1em}
		&.↑ {margin-left: -0.2em;top: -0.25em}
		&.↓ {margin-left: -1.0em;top: +0.25em}
		&.→ {margin-left: -0.2em;}
	}
}

#volume {
	--size: 1.4rem;
	--thumb-size: 0.4rem;
	width:  calc(var(--size) + var(--thumb-size) * 1.1);
	height: var(--size);
	position: absolute;
	top:   .25em;
	right: .15em;
	canvas {
		position: absolute;
		top:   0;
		right: 0;
		cursor: pointer;
	}
	input {
		--thumb-size: inherit;
		--size: 1.2rem;
		position: absolute;
		z-index: -1;
		left: calc(var(--thumb-size)/2);
		top:  var(--size);
		width:var(--size);
		height: 3px;
		rotate: -90deg;
		transform-origin: 0 50%;
		opacity: 0;
		will-change: opacity;
	}
	input:focus,
	&:hover input {z-index: 1;opacity: 1}
	&:hover input {transition: all .2s .4s}
}

#LevelMenu {
	--scale: 1.2;
	--t: calc(1rem * var(--scale));
	--width: calc(var(--t)*8);
	text-transform: uppercase;
	font: 0.9rem/1 sans-serif;
	margin-left: 0;
	.current {
		padding-top:    .3em;
		padding-bottom: .2em;
	}
	menu > li, .current {
		display: flex;
		gap: .2em;
		align-items: center;
	}
	menu > li::before, .current::before {
		--x: calc(-1*var(--t) * var(--ofst-x, 0));
		--size: var(--width) var(--t);
		content: '';
		background: no-repeat var(--x) 0/var(--size) var(--url);
		margin-top: -.2em;
		width:  var(--t);
		height: var(--t);
	}
}

label,.label {color:var(--label-fg)}
label:focus-within,
label:has(+.menu :is(:hover,:focus)),
span:has(input:focus) + label,
:is(label,.label):hover,
:is(label,.label):has(+.menu:is(:hover,:focus)) {
	color: var(--label-fg-hover) !important;
}